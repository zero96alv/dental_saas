# Generated by Django 5.2.4 on 2025-10-08 17:53
# Manual migration for clinical tracking models

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0030_integrate_consentimiento_cuestionario'),
    ]

    operations = [
        # Mejorar el modelo HistorialClinico existente
        migrations.AddField(
            model_name='historialclinico',
            name='tipo_registro',
            field=models.CharField(
                max_length=15,
                choices=[
                    ('CONSULTA', 'Consulta General'),
                    ('DIAGNOSTICO', 'Diagnóstico'),
                    ('TRATAMIENTO', 'Tratamiento Realizado'),
                    ('SEGUIMIENTO', 'Seguimiento'),
                    ('EMERGENCIA', 'Emergencia'),
                    ('OBSERVACION', 'Observación General'),
                ],
                default='CONSULTA',
                help_text="Tipo de registro clínico"
            ),
        ),
        migrations.AddField(
            model_name='historialclinico',
            name='cita',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='entradas_historial',
                to='core.cita',
                help_text="Cita asociada a este registro (opcional)"
            ),
        ),
        
        # Mejorar metadatos del modelo HistorialClinico
        migrations.AlterModelOptions(
            name='historialclinico',
            options={
                'ordering': ['-fecha_evento'],
                'verbose_name': 'Entrada de Historial Clínico',
                'verbose_name_plural': 'Entradas de Historial Clínico'
            },
        ),
        
        # Mejorar metadatos del modelo EstadoDiente
        migrations.AlterModelOptions(
            name='estadodiente',
            options={
                'verbose_name': 'Estado Actual de Diente',
                'verbose_name_plural': 'Estados Actuales de Dientes'
            },
        ),
        
        # Agregar modelo HistorialEstadoDiente
        migrations.CreateModel(
            name='HistorialEstadoDiente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_diente', models.IntegerField(help_text='Número del diente según sistema FDI (11-48)')),
                ('fecha_cambio', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del cambio de estado')),
                ('tratamiento_realizado', models.TextField(help_text='Descripción detallada del tratamiento que generó el cambio')),
                ('observaciones', models.TextField(blank=True, help_text='Notas adicionales del dentista sobre el tratamiento')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_dental', to='core.paciente')),
                ('diagnostico_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cambios_desde', to='core.diagnostico', help_text='Estado previo del diente (null si es primer registro)')),
                ('diagnostico_nuevo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cambios_hacia', to='core.diagnostico', help_text='Nuevo estado del diente después del tratamiento')),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cambios_dentales', to='core.cita', help_text='Cita donde se realizó el cambio')),
                ('dentista', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.perfildentista', help_text='Dentista responsable del tratamiento')),
            ],
            options={
                'ordering': ['-fecha_cambio'],
                'verbose_name': 'Historial de Estado de Diente',
                'verbose_name_plural': 'Historial de Estados de Dientes',
            },
        ),
        
        # Agregar modelo TratamientoCita
        migrations.CreateModel(
            name='TratamientoCita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dientes_tratados', models.CharField(max_length=200, help_text='Números de dientes tratados separados por comas (ej: 16,17,18)')),
                ('descripcion', models.TextField(help_text='Descripción detallada del tratamiento realizado')),
                ('estado_inicial_descripcion', models.TextField(help_text='Descripción del estado de los dientes antes del tratamiento')),
                ('estado_final_descripcion', models.TextField(help_text='Descripción del estado de los dientes después del tratamiento')),
                ('trabajo_pendiente', models.TextField(blank=True, help_text='Trabajo que queda pendiente para próximas citas')),
                ('requiere_seguimiento', models.BooleanField(default=False, help_text='Si este tratamiento requiere cita de seguimiento')),
                ('fecha_seguimiento_sugerida', models.DateField(blank=True, null=True, help_text='Fecha sugerida para cita de seguimiento')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tratamientos_realizados', to='core.cita')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.perfildentista', help_text='Dentista que registra el tratamiento')),
                ('servicios', models.ManyToManyField(blank=True, to='core.servicio', help_text='Servicios facturables aplicados en este tratamiento')),
            ],
            options={
                'ordering': ['-fecha_registro'],
                'verbose_name': 'Tratamiento de Cita',
                'verbose_name_plural': 'Tratamientos de Citas',
            },
        ),
        
        # Agregar índices para mejor rendimiento
        migrations.AddIndex(
            model_name='historialestadodiente',
            index=models.Index(fields=['paciente', 'numero_diente'], name='core_histor_pacient_a8e7c7_idx'),
        ),
        migrations.AddIndex(
            model_name='historialestadodiente',
            index=models.Index(fields=['fecha_cambio'], name='core_histor_fecha_c_4e3b83_idx'),
        ),
    ]
