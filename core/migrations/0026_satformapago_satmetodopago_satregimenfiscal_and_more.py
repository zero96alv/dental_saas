# Generated by Django 5.2.4 on 2025-08-25 01:27

import django.db.models.deletion
from django.db import migrations, models


def poblar_catalogos_sat(apps, schema_editor):
    """Poblar los catálogos SAT con valores básicos"""
    SatFormaPago = apps.get_model('core', 'SatFormaPago')
    SatMetodoPago = apps.get_model('core', 'SatMetodoPago')
    SatRegimenFiscal = apps.get_model('core', 'SatRegimenFiscal')
    SatUsoCFDI = apps.get_model('core', 'SatUsoCFDI')
    
    # Crear formas de pago básicas
    formas_pago = [
        ('01', 'Efectivo'),
        ('03', 'Transferencia electrónica de fondos'),
        ('04', 'Tarjeta de crédito'),
        ('28', 'Tarjeta de débito'),
    ]
    for codigo, descripcion in formas_pago:
        SatFormaPago.objects.get_or_create(codigo=codigo, defaults={'descripcion': descripcion})
    
    # Crear métodos de pago básicos
    metodos_pago = [
        ('PUE', 'Pago en una sola exhibición'),
        ('PPD', 'Pago en parcialidades o diferido'),
    ]
    for codigo, descripcion in metodos_pago:
        SatMetodoPago.objects.get_or_create(codigo=codigo, defaults={'descripcion': descripcion})
    
    # Crear regímenes fiscales básicos
    regimenes = [
        ('612', 'Personas Físicas con Actividades Empresariales y Profesionales'),
        ('601', 'General de Ley Personas Morales'),
        ('605', 'Sueldos y Salarios e Ingresos Asimilados a Salarios'),
    ]
    for codigo, descripcion in regimenes:
        SatRegimenFiscal.objects.get_or_create(codigo=codigo, defaults={'descripcion': descripcion})
    
    # Crear usos CFDI básicos
    usos_cfdi = [
        ('G01', 'Adquisición de mercancías'),
        ('G03', 'Gastos en general'),
        ('D01', 'Honorarios médicos, dentales y gastos hospitalarios'),
    ]
    for codigo, descripcion in usos_cfdi:
        SatUsoCFDI.objects.get_or_create(codigo=codigo, defaults={'descripcion': descripcion})


def reverse_poblar_catalogos_sat(apps, schema_editor):
    """Reversa de poblar catálogos SAT"""
    pass  # No necesitamos hacer nada en reversa


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0025_datosfiscales_calle_datosfiscales_codigo_postal_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SatFormaPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SAT Forma de Pago',
                'verbose_name_plural': 'SAT Formas de Pago',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='SatMetodoPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SAT Método de Pago',
                'verbose_name_plural': 'SAT Métodos de Pago',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='SatRegimenFiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('persona_fisica', models.BooleanField(default=True)),
                ('persona_moral', models.BooleanField(default=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SAT Régimen Fiscal',
                'verbose_name_plural': 'SAT Regímenes Fiscales',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='SatUsoCFDI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('persona_fisica', models.BooleanField(default=True)),
                ('persona_moral', models.BooleanField(default=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SAT Uso CFDI',
                'verbose_name_plural': 'SAT Usos CFDI',
                'ordering': ['codigo'],
            },
        ),
        migrations.AlterField(
            model_name='pago',
            name='forma_pago_sat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.satformapago'),
        ),
        migrations.AlterField(
            model_name='pago',
            name='metodo_sat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.satmetodopago'),
        ),
        migrations.AddField(
            model_name='datosfiscales',
            name='regimen_fiscal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.satregimenfiscal'),
        ),
        migrations.AlterField(
            model_name='datosfiscales',
            name='uso_cfdi',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.satusocfdi'),
        ),
        # Paso 2: Poblar catálogos SAT con datos básicos
        migrations.RunPython(poblar_catalogos_sat, reverse_poblar_catalogos_sat),
    ]
